 import { Button, VerticalBox, HorizontalBox, ListView, ScrollView, GroupBox, LineEdit, TextEdit, ProgressIndicator, ComboBox } from "std-widgets.slint";

export struct ImageItem {
    file-path: string,
    file-name: string,
    file-size: string,
    preview-image: image,
    processing: bool,
    features-extracted: bool,
    error-message: string,
    features-preview: string,
    show-features: bool,
}

export struct ModelStatus {
    loaded: bool,
    loading: bool,
    downloading: bool,
    download-progress: float,
    model-type: string,
    selected-model: string,
}

component ImageCard inherits Rectangle {
    in property <ImageItem> item;
    callback extract-features(string);
    callback toggle-features(string);
    callback remove-image(string);

    width: 350px;
    min-height: 250px;
    background: white;
    border-radius: 8px;
    drop-shadow-blur: 4px;
    drop-shadow-color: #00000020;

    VerticalBox {
        padding: 16px;
        spacing: 12px;

        // ÂõæÁâáÈ¢ÑËßà
        Rectangle {
            height: 120px;
            background: #f5f5f5;
            border-radius: 4px;
            if item.preview-image.width > 0: Image {
                source: item.preview-image;
                image-fit: contain;
                width: 100%;
                height: 100%;
            }
            if item.preview-image.width == 0: Text {
                text: "üìÅ";
                font-size: 24px;
                horizontal-alignment: center;
                vertical-alignment: center;
            }
        }

        // Êñá‰ª∂‰ø°ÊÅØ
        VerticalBox {
            spacing: 4px;
            Text {
                text: item.file-name;
                font-weight: 600;
                overflow: elide;
            }

            Text {
                text: item.file-size;
                color: #666666;
                font-size: 12px;
            }
        }

        // Â§ÑÁêÜÁä∂ÊÄÅ
        Rectangle {
            height: 40px;
            if item.processing: HorizontalBox {
                alignment: center;
                spacing: 8px;
                ProgressIndicator {
                    width: 20px;
                    height: 20px;
                    indeterminate: true;
                }

                Text {
                    text: "ÊèêÂèñÁâπÂæÅ‰∏≠...";
                    color: #1976d2;
                }
            }
            if !item.processing && item.features-extracted: HorizontalBox {
                spacing: 8px;
                Text {
                    text: "‚úÖ ÁâπÂæÅÊèêÂèñÂÆåÊàê";
                    color: #4caf50;
                }

                Button {
                    text: item.show-features ? "ÈöêËóè" : "ÊòæÁ§∫";
                    clicked => {
                        toggle-features(item.file-path);
                    }
                }
            }
            if !item.processing && !item.features-extracted && item.error-message == "": Button {
                text: "ÊèêÂèñÁâπÂæÅ";
                clicked => {
                    extract-features(item.file-path);
                }
            }
            if item.error-message != "": Text {
                text: "‚ùå " + item.error-message;
                color: #f44336;
                overflow: elide;
            }
        }

        // ÁâπÂæÅÊòæÁ§∫
        if item.show-features && item.features-preview != "": GroupBox {
            title: "ÁâπÂæÅÂêëÈáèÈ¢ÑËßà";
            ScrollView {
                max-height: 200px;
                TextEdit {
                    text: item.features-preview;
                    read-only: true;
                    font-size: 9px;
                    wrap: word-wrap;
                }
            }
        }

        // Âà†Èô§ÊåâÈíÆ
        Button {
            text: "ÁßªÈô§";
            clicked => {
                remove-image(item.file-path);
            }
        }
    }
}

export component MainWindow inherits Window {
    in property <ModelStatus> model-status;
    in property <[ImageItem]> uploaded-images;
    callback select-files();
    callback extract-all-features();
    callback clear-all();
    callback extract-features(string);
    callback toggle-features(string);
    callback remove-image(string);
    callback change-model(string);

    title: "ÂõæÁâáÁâπÂæÅÊèêÂèñ - Slint Native";
    min-width: 800px;
    min-height: 600px;
    background: #f8f9fa;

    VerticalBox {
        padding: 20px;
        spacing: 20px;

        // Ê†áÈ¢òÊ†è
        Rectangle {
            height: 60px;
            background: #1976d2;
            border-radius: 8px;
            Text {
                text: "ÂõæÁâáÁâπÂæÅÊèêÂèñ";
                color: white;
                font-size: 18px;
                font-weight: 600;
                horizontal-alignment: center;
                vertical-alignment: center;
            }
        }

        // Ê®°ÂûãÁä∂ÊÄÅÂíåÈÄâÊã©
        GroupBox {
            title: "Ê®°ÂûãÈÖçÁΩÆ";
            VerticalBox {
                spacing: 12px;

                // Ê®°ÂûãÈÄâÊã©
                HorizontalBox {
                    spacing: 12px;
                    alignment: start;

                    Text {
                        text: "ÈÄâÊã©Ê®°Âûã:";
                        vertical-alignment: center;
                    }

                    ComboBox {
                        model: ["Small", "Medium", "Large", "HybridMedium", "HybridLarge"];
                        current-value: model-status.selected-model;
                        enabled: !model-status.loading;
                        selected(value) => {
                            change-model(value);
                        }
                    }
                }

                // Ê®°ÂûãÁä∂ÊÄÅ
                VerticalBox {
                    spacing: 8px;

                    // ‰∏ãËΩΩÁä∂ÊÄÅ
                    if model-status.downloading: HorizontalBox {
                        spacing: 8px;
                        ProgressIndicator {
                            width: 20px;
                            height: 20px;
                            indeterminate: model-status.download-progress <= 0;
                        }

                        Text {
                            text: model-status.download-progress > 0 ? "‰∏ãËΩΩ‰∏≠... " + Math.round(model-status.download-progress * 100) + "%" : "‰∏ãËΩΩ‰∏≠...";
                            color: #2196f3;
                        }
                    }

                    // ‰∏ãËΩΩËøõÂ∫¶Êù°
                    if model-status.downloading && model-status.download-progress > 0: Rectangle {
                        height: 4px;
                        background: #e0e0e0;
                        border-radius: 2px;
                        Rectangle {
                            width: parent.width * model-status.download-progress;
                            height: parent.height;
                            background: #2196f3;
                            border-radius: 2px;
                        }
                    }

                    // Âä†ËΩΩÁä∂ÊÄÅ
                    if !model-status.downloading && model-status.loading: HorizontalBox {
                        spacing: 8px;
                        ProgressIndicator {
                            width: 20px;
                            height: 20px;
                            indeterminate: true;
                        }

                        Text {
                            text: "Ê®°ÂûãÂä†ËΩΩ‰∏≠...";
                            color: #ff9800;
                        }
                    }

                    // ÊúÄÁªàÁä∂ÊÄÅ
                    if !model-status.downloading && !model-status.loading && model-status.loaded: Text {
                        text: "‚úÖ Ê®°ÂûãÂ∑≤Âä†ËΩΩ (" + model-status.model-type + ")";
                        color: #4caf50;
                    }
                    if !model-status.downloading && !model-status.loading && !model-status.loaded: Text {
                        text: "‚ùå Ê®°ÂûãÊú™Âä†ËΩΩ";
                        color: #f44336;
                    }
                }
            }
        }

        // Êñá‰ª∂ÈÄâÊã©Âå∫Âüü
        Rectangle {
            height: 120px;
            background: #ffffff;
            border-width: 2px;
            border-color: #cccccc;
            border-radius: 8px;
            TouchArea {
                clicked => {
                    select-files();
                }
            }

            VerticalBox {
                alignment: center;
                spacing: 8px;
                Text {
                    text: "üìÅ";
                    font-size: 32px;
                }

                Text {
                    text: "ÁÇπÂáªÈÄâÊã©ÂõæÁâáÊñá‰ª∂";
                    font-size: 14px;
                    color: #666666;
                }
            }
        }

        // ÊâπÈáèÊìç‰ΩúÊåâÈíÆ
        if uploaded-images.length > 0: HorizontalBox {
            spacing: 12px;
            Button {
                text: "ÊâπÈáèÊèêÂèñÁâπÂæÅ";
                enabled: !model-status.loading;
                clicked => {
                    extract-all-features();
                }
            }

            Button {
                text: "Ê∏ÖÁ©∫ÊâÄÊúâ";
                clicked => {
                    clear-all();
                }
            }
        }

        // ÂõæÁâáÂàóË°®
        if uploaded-images.length > 0: ScrollView {
            VerticalBox {
                spacing: 16px;
                padding: 8px;
                // ‰ΩøÁî®ÁΩëÊ†ºÂ∏ÉÂ±ÄÊòæÁ§∫ÂõæÁâáÂç°Áâá
                for item[index] in uploaded-images: ImageCard {
                    item: item;
                    extract-features(file-path) => {
                        extract-features(file-path);
                    }
                    toggle-features(file-path) => {
                        toggle-features(file-path);
                    }
                    remove-image(file-path) => {
                        remove-image(file-path);
                    }
                }
            }
        }
        if uploaded-images.length == 0: Rectangle {
            height: 200px;
            Text {
                text: "ÊöÇÊó†‰∏ä‰º†ÁöÑÂõæÁâá";
                color: #999999;
                horizontal-alignment: center;
                vertical-alignment: center;
            }
        }
    }
}
